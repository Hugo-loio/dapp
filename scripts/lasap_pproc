#!/bin/sh

mode_usage(){
  echo "\nUSAGE\n\tlasap_pproc [OPTIONS] -m|--mode $1 -a|--args \"$2\""
  echo "\nAVAILABLE OPTIONS"
  shift && shift
  num_options=$#
  invalid_options=0
  while [ $# -gt 0 ]; do
    case $1 in 
      -p)
	echo "\t-p|--parallelize <jobid>/<numjobs>"
	echo "\t\tActivate parallelization assuming <numjobs> independent lasap_pproc jobs are being run, distinguishable only by <jobid>. <jobid> should range from 1 to <numjobs>."
	shift
	;;
      -f) 
	echo "\t-f|--disk_format <disk_format>"
	echo "\t\tSet the format of the output files, 'csv' by default. The currently supported file formats are"
	avail_formats="csv parquet"
	for format in $avail_formats; do
	  echo "\t\t\t$format"
	done
	shift
	;;
      *)
	invalid_options=$(expr $invalid_options + 1)
    esac
  done
  if [ $num_options -eq $invalid_options ]; then
    echo "\tnone"
  fi
}

check_mode(){
  is_avail=0
  for avail_mode in $avail_modes ; do
    if [ "$avail_mode" = "$1" ]; then
      is_avail=1
    fi
  done
  if [ $is_avail -eq 0 ]; then
    echo "ERROR: mode $1 not recognized!"
    exit
  fi
}

check_available_paralellization(){
  para_modes="average kron_moments" 
  is_para=0
  for para_mode in $para_modes ; do
    if [ "$para_mode" = "$1" ]; then
      is_para=1
    fi
  done
  if [ $is_para -eq 0 ]; then
    echo "ERROR: mode $1 is not parallelizable (option -p not available)"
    exit
  fi
}

mode_help(){
  case $mode in
    "merge")
      echo "\nDESCRIPTION\n\tMerge all the data in a subdirectory <dirname> of the data directory, according to matching properties. The merged data is placed in the directory <dirname>_merged."
      mode_usage $mode "<dirname>" -f 
      ;;
    "average")
      echo "\nDESCRIPTION\n\tAverage data in directory <dirname> with respect to the key <avg_key>. The averaged data is placed in the directory <dirname>_avg(<avg_key>)"
      mode_usage $mode "<dirname> <avg_key>" -p -f 
      ;;
    "kron_moments")
      echo "\nDESCRIPTION\n\tCompute the average of the Kronecker power of the data in directory <dirname> with respect to the key <avg_key>, until power <num_moments>. The averaged data is placed in the directory <dirname>_avg(<avg_key>). It is mandatory to choose the amount of available memory <mem_avail> for the program."
      mode_usage $mode "<dirname> <avg_key> <num_moments> <mem_avail>" -p -f
      ;;
  esac
}

avail_modes="merge average kron_moments"

HELP=0
PARALLELIZE=0
mode=""
jobid=0
numjobs=0
disk_format='csv'

while [ $# -gt 0 ]; do
  case $1 in
    -m|--mode)
      mode="$2"
      check_mode $mode
      shift && shift
      ;;
    -h|--help)
      HELP=1
      shift
      ;;
    -a|--args)
      args="$2"
      shift && shift
      ;;
    -p|--parallelize)
      PARALLELIZE=1
      jobid=$(echo $2 | cut -d "/" -f 1)
      numjobs=$(echo $2 | cut -d "/" -f 2)
      shift && shift
      ;;
    -f|--disk_format)
      disk_format="$2"
      shift && shift
      ;;
    *)
      #OTHER_ARGUMENTS+=("$1")
      echo "ERROR: Argument $1 not recognized!" 
      exit
      ;;
  esac
done


if [ -z $mode ]; then 
  if [ $HELP -eq 1 ]; then
    mode_usage "<mode>" "<args>" -p -f 
    echo "\nAVAILABLE MODES"
    for avail_mode in $avail_modes ; do
      echo "\t$avail_mode"
    done
    echo "Try 'lasap_pproc -h -m <mode>' to get specific information about mode <mode>"
  else
    echo "ERROR: No arguments parsed"
    echo "For help use\n\tlasap_pproc -h"
  fi
else
  if [ $HELP -eq 1 ]; then
    mode_help
  else
    if [ $PARALLELIZE -eq 1 ]; then
      check_available_paralellization $mode
      args="$args $jobid $numjobs"
    fi
    python -c "import lasap.pproc.parse_args" $mode $disk_format $args
  fi
fi
